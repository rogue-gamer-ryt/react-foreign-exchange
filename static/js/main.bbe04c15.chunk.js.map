{"version":3,"sources":["components/SideDrawer/DrawerToggleButton.js","components/Toolbar/Toolbar.js","actions/simpleAction.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","components/Pagination/index.js","actions/paginationAction.js","components/CurrTable/CurrTable.js","utility.js","components/CurrDropdown/index.js","components/SearchBar/index.js","App.js","serviceWorker.js","reducers/rootReducer.js","reducers/simpleReducer.js","reducers/paginationReducer.js","index.js","store.js"],"names":["drawerToggleButton","props","react_default","a","createElement","className","onClick","click","toolbar","SideDrawer_DrawerToggleButton","drawerClickHandler","href","fetchCurrRates","selectedCurr","dispatch","fetch","then","response","json","data","type","payload","catch","err","payoad","fetchCurrRatesOld","prevDate","sideDrawer","drawerClasses","show","backdrop","Pagination","handlePageChange","e","preventDefault","target","id","prevPageNum","currPageNum","console","log","totalCount","countPerPage","pageCount","Math","ceil","pages","i","push","key","createPagination","nextPageNum","setAllData","setTotalCount","CurrTable","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pageNo","setPageNo","setTableData","pageNumber","rows","tempArray","toConsumableArray","paginationData","allData","ul","ll","length","slice","setCurrentData","tableGenerator","currData","currPageData","resultOldData","base","result","rates","oldRates","keys","forEach","rate","currencyName","currencyValue","toFixed","parseObjectToArray","selectedCurrency","prevProps","prevState","temp","_i","_Object$entries","entries","_ref3","_ref2","slicedToArray","value","setCopyAllData","Pagination_Pagination","React","Component","connect","state","objectSpread","count","getDate","yesterday","Date","setDate","ddOld","String","padStart","mmOld","getMonth","yyyyOld","getFullYear","CurrDropdown","onChange","setCurrency","date","options","currencies","getOptions","SearchBar","searchRef","createRef","ref","current","copyAllData","row","search","placeholder","App","sideDrawerOpen","drawerToggleClickHandler","setState","backdropClickHandler","simpleAction","event","_this2","setInterval","clearInterval","Backdrop_Backdrop","Toolbar_Toolbar","SideDrawer_SideDrawer","CurrDropdown_CurrDropdown","SearchBar_SearchBar","components_CurrTable_CurrTable","currRate","oldRate","value1","value2","Boolean","window","location","hostname","match","combineReducers","arguments","undefined","action","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbe04c15.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './DrawerToggleButton.css';\r\n\r\nconst drawerToggleButton = props =>(\r\n    <button className = \"toggle-button\" onClick={props.click}> \r\n        <div className = \"toggle-button__line\"/>\r\n        <div className = \"toggle-button__line\"/>\r\n        <div className = \"toggle-button__line\"/>\r\n    </button>\r\n);\r\n\r\nexport default drawerToggleButton;","import React from 'react';\r\n\r\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\r\nimport './Toolbar.css';\r\n\r\nconst toolbar = props=>(\r\n    <header className=\"toolbar\">\r\n        <nav className=\"toolbar_navigation\">\r\n            <div className=\"toolbar_toggle-button\">\r\n                <DrawerToggleButton click ={props.drawerClickHandler}/>\r\n            </div>\r\n            <div className =\"toolbar_logo\"><a href=\"/\">Foreign exchange</a></div>\r\n            <div className=\"toolbar_navigation_items\">\r\n                <ul>\r\n                    <li><a href=\"/\">Home</a></li>\r\n                    <li><a href=\"/\">About Us</a></li>\r\n                    <li><a href=\"/\">Contact Us</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;\r\n","export const simpleAction = () => dispatch => {\r\n  dispatch({\r\n    type: \"SIMPLE_ACTION\",\r\n    payload: \"result_of_simple_action\"\r\n  });\r\n};\r\n\r\nexport function fetchCurrRates(selectedCurr) {\r\n  return function(dispatch) {\r\n    fetch(\"https://api.exchangeratesapi.io/latest?base=\" + selectedCurr)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        dispatch({ type: \"FETCH_DONE\", payload: data });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"FETCH_FAIL\", payoad: err });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchCurrRatesOld(selectedCurr, prevDate) {\r\n  return function(dispatch) {\r\n    fetch(\r\n      \"https://api.exchangeratesapi.io/history?start_at=\" +\r\n        prevDate +\r\n        \"&end_at=\" +\r\n        prevDate +\r\n        \"&base=\" +\r\n        selectedCurr\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        dispatch({ type: \"FETCH_DONE_OLD_RATES\", payload: data });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"FETCH_FAIL_OLD_RATES\", payoad: err });\r\n      });\r\n  };\r\n}\r\n","import React from 'react'\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst sideDrawer = props => {\r\n    let drawerClasses ='side-drawer';\r\n    if(props.show){\r\n        drawerClasses ='side-drawer open';\r\n    }\r\n    return(   \r\n     <nav className={drawerClasses}>\r\n        <ul>\r\n            <li><a href =\"/\">Home</a></li>\r\n            <li><a href =\"/\">About Us</a></li>\r\n            <li><a href =\"/\">Contact Us</a></li>\r\n        </ul>\r\n    </nav>);\r\n};\r\n\r\nexport default sideDrawer;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => (\r\n    <div className=\"backdrop\"onClick={props.click}/>\r\n);\r\n\r\nexport default backdrop;","import React from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nexport default function Pagination(props) {\r\n  const handlePageChange = e => {\r\n    e.preventDefault();\r\n    props.handlePageChange(e.target.id);\r\n  };\r\n\r\n  const backPageChange = e => {\r\n    e.preventDefault();\r\n    var prevPageNum;\r\n    if (props.currPageNum != 1) {\r\n      prevPageNum = props.currPageNum - 1;\r\n      props.handlePageChange(prevPageNum);\r\n    }\r\n  };\r\n  const nextPageChange = e => {\r\n    e.preventDefault();\r\n    var nextPageNum;\r\n    const { totalCount, countPerPage } = props;\r\n    var pageCount = Math.ceil(totalCount / countPerPage);\r\n    if (props.currPageNum !== pageCount) {\r\n      nextPageNum = props.currPageNum + 1;\r\n      props.handlePageChange(nextPageNum);\r\n    }\r\n  };\r\n\r\n  const createPagination = () => {\r\n    console.log(\"createPagination: \", props);\r\n    const { totalCount, countPerPage } = props;\r\n    var pageCount = Math.ceil(totalCount / countPerPage);\r\n    var pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n      pages.push(\r\n        <a\r\n          className={props.currPageNum == i ? \"active-page\" : \"inactive-page\"}\r\n          onClick={handlePageChange}\r\n          id={i}\r\n          key={i}\r\n        >\r\n          {i}\r\n        </a>\r\n      );\r\n    }\r\n    return pages;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"pagination\">\r\n        <a\r\n          href=\"#\"\r\n          onClick={backPageChange}\r\n          className={\r\n            props.currPageNum == 1\r\n              ? \"pagination-arrow arrow-disable\"\r\n              : \"pagination-arrow\"\r\n          }\r\n        >\r\n          ❮&nbsp;\r\n        </a>\r\n        {createPagination()}\r\n        <a\r\n          href=\"#\"\r\n          onClick={nextPageChange}\r\n          className={\r\n            props.currPageNum ==\r\n            Math.ceil(props.totalCount / props.countPerPage)\r\n              ? \"pagination-arrow arrow-disable\"\r\n              : \"pagination-arrow\"\r\n          }\r\n        >\r\n          &nbsp;❯\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const setPageNo = data => dispatch => {\r\n  dispatch({\r\n    type: \"SET_PAGE_NO\",\r\n    payload: data\r\n  });\r\n};\r\nexport const setCurrentData = data => dispatch => {\r\n  dispatch({\r\n    type: \"SET_CURRENT_DATA\",\r\n    payload: data\r\n  });\r\n};\r\nexport const setAllData = data => dispatch => {\r\n  dispatch({\r\n    type: \"SET_ALL_DATA\",\r\n    payload: data\r\n  });\r\n};\r\nexport const setTotalCount = data => dispatch => {\r\n  dispatch({\r\n    type: \"SET_TOTAL_COUNT\",\r\n    payload: data\r\n  });\r\n};\r\nexport const setCountPerPage = data => dispatch => {\r\n  dispatch({\r\n    type: \"SET_COUNT_PER_PAGE\",\r\n    payload: data\r\n  });\r\n};\r\nexport const setCurrency = data => dispatch => {\r\n  dispatch({\r\n    type: \"SET_CURRENCY\",\r\n    payload: data\r\n  });\r\n};\r\nexport const setCopyAllData = data => dispatch => {\r\n  dispatch({\r\n    type: \"SET_COPY_ALL_DATA\",\r\n    payload: data\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCurrRates, fetchCurrRatesOld } from \"../../actions/simpleAction\";\r\nimport Pagination from \"../Pagination/index\";\r\nimport \"./CurrTable.css\";\r\nimport {\r\n  setTotalCount,\r\n  setPageNo,\r\n  setCurrentData,\r\n  setAllData,\r\n  setCopyAllData\r\n} from \"../../actions/paginationAction\";\r\n\r\nclass CurrTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\r\n      this.props.currData.result &&\r\n      Object.keys(this.props.currData.result.rates).length > 0\r\n    )\r\n      this.parseObjectToArray(this.props.paginationData.selectedCurrency);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.paginationData.selectedCurrency !==\r\n        this.props.paginationData.selectedCurrency ||\r\n      prevProps.currData.result !== this.props.currData.result\r\n    )\r\n      this.parseObjectToArray(this.props.paginationData.selectedCurrency);\r\n    if (\r\n      prevProps.paginationData.allData !== this.props.paginationData.allData ||\r\n      prevProps.paginationData.currPageNum !==\r\n        this.props.paginationData.currPageNum\r\n    )\r\n      this.setTableData(this.props.paginationData.currPageNum);\r\n  }\r\n\r\n  parseObjectToArray(selectedCurrency) {\r\n    var rates = this.props.currData.result.rates;\r\n    var temp = [];\r\n    for (const [key, value] of Object.entries(rates)) {\r\n      if (key !== selectedCurrency)\r\n        temp.push({ currencyName: key, currencyValue: value });\r\n    }\r\n    this.props.setTotalCount(temp.length);\r\n    this.props.setAllData(temp);\r\n    this.props.setCopyAllData(temp);\r\n  }\r\n\r\n  handlePageChange = pageNo => {\r\n    this.props.setPageNo(pageNo);\r\n  };\r\n\r\n  setTableData = pageNumber => {\r\n    console.log(\"setTableData: \", pageNumber);\r\n    let rows = [];\r\n    let tempArray = [...this.props.paginationData.allData];\r\n    let ul = pageNumber * this.props.paginationData.countPerPage;\r\n    let ll = (pageNumber - 1) * this.props.paginationData.countPerPage;\r\n    if (ul < tempArray.length) {\r\n      rows = tempArray.slice(ll, ul);\r\n    } else if (ul >= tempArray.length) {\r\n      rows = tempArray.slice(ll);\r\n    }\r\n    this.props.setCurrentData(rows);\r\n    console.log(\"Printing props in setTableData: \", this.props);\r\n  };\r\n\r\n  tableGenerator = () => {\r\n    console.log(\"tableGenerator\");\r\n    console.log(this.props.currData);\r\n    var rows = [];\r\n    if (\r\n      this.props.paginationData.currPageData.length > 0 &&\r\n      this.props.currData.resultOldData\r\n    ) {\r\n      var base = this.props.currData.result.base;\r\n      var rates = this.props.paginationData.currPageData;\r\n      var oldRates = this.props.currData.resultOldData.rates;\r\n      oldRates = oldRates[Object.keys(oldRates)[0]];\r\n      console.log(\"rates \" + rates + \"base \" + base);\r\n      rates.forEach(rate => {\r\n        rows.push(\r\n          <div key={rate.currencyName} className=\"tableRow\">\r\n            <span className=\"currName\">{rate.currencyName}</span>\r\n            <span className=\"currRate\">{rate.currencyValue.toFixed(5)}</span>\r\n            <span className=\"curr-diff\">\r\n              {rate.currencyValue - oldRates[rate.currencyName] > 0\r\n                ? \"+\" +\r\n                  (rate.currencyValue - oldRates[rate.currencyName]).toFixed(5)\r\n                : +(rate.currencyValue - oldRates[rate.currencyName]).toFixed(\r\n                    5\r\n                  )}\r\n            </span>\r\n          </div>\r\n        );\r\n      });\r\n    } else\r\n      rows = (\r\n        <div className=\"tableRow\">\r\n          <span className=\"currName\">No Data</span>\r\n        </div>\r\n      );\r\n    return rows;\r\n  };\r\n\r\n  render() {\r\n    console.log(\"Props: \", this.props);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"table-container\">{this.tableGenerator()}</div>\r\n        <div>\r\n          <Pagination\r\n            totalCount={this.props.paginationData.allData.length}\r\n            countPerPage={this.props.paginationData.countPerPage}\r\n            handlePageChange={this.handlePageChange}\r\n            currPageNum={this.props.paginationData.currPageNum}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCurrRates: value => dispatch(fetchCurrRates(value)),\r\n  fetchCurrRatesOld: value => dispatch(fetchCurrRatesOld(value)),\r\n  setTotalCount: count => dispatch(setTotalCount(count)),\r\n  setPageNo: value => dispatch(setPageNo(value)),\r\n  setCurrentData: value => dispatch(setCurrentData(value)),\r\n  setAllData: value => dispatch(setAllData(value)),\r\n  setCopyAllData: value => dispatch(setCopyAllData(value))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CurrTable);\r\n","export const getDate = value => {\r\n  var yesterday = new Date(value);\r\n  yesterday.setDate(yesterday.getDate() - 1);\r\n  var ddOld = String(yesterday.getDate()).padStart(2, \"0\");\r\n  var mmOld = String(yesterday.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n  var yyyyOld = yesterday.getFullYear();\r\n  yesterday = yyyyOld + \"-\" + mmOld + \"-\" + ddOld;\r\n  return yesterday;\r\n};\r\n","import React from \"react\";\r\nimport \"./CurrDropdown.css\";\r\nimport { getDate } from \"../../utility\";\r\n\r\nexport default function CurrDropdown(props) {\r\n  const getOptions = () => {\r\n    console.log(\"Calling getOptions: \", props);\r\n    var options = [];\r\n    if (props.result && Object.keys(props.result.rates)) {\r\n      var currencies = props.result.rates;\r\n      for (let key in currencies) {\r\n        options.push(\r\n          <option key={key} value={key}>\r\n            {key}\r\n          </option>\r\n        );\r\n      }\r\n    } else options = null;\r\n\r\n    return options;\r\n  };\r\n\r\n  const setCurrency = e => {\r\n    e.preventDefault();\r\n    props.setCurrency(e.target.value);\r\n    if (props.date) {\r\n      var date = getDate(props.date);\r\n    }\r\n    props.fetchCurrRatesOld(e.target.value, date);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropDown\">\r\n      <select\r\n        className=\"dropbtn\"\r\n        value={props.selectedCurrency}\r\n        onChange={setCurrency}\r\n      >\r\n        {getOptions()}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React, { createRef } from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nexport default function SearchBar(props) {\r\n  const searchRef = createRef();\r\n  const handleSearchChange = e => {\r\n    let rows = [];\r\n    searchRef.current.value = e.target.value;\r\n    if (e.target.value.length > 0) {\r\n      props.copyAllData.forEach(row => {\r\n        if (row.currencyName.search(e.target.value) > -1) {\r\n          rows.push(row);\r\n        }\r\n      });\r\n      props.setAllData(rows);\r\n    } else parseObjectToArray(props.selectedCurrency);\r\n  };\r\n\r\n  const parseObjectToArray = selectedCurrency => {\r\n    var rates = props.result.rates;\r\n    var temp = [];\r\n    for (const [key, value] of Object.entries(rates)) {\r\n      if (key !== selectedCurrency)\r\n        temp.push({ currencyName: key, currencyValue: value });\r\n    }\r\n    props.setTotalCount(temp.length);\r\n    props.setAllData(temp);\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchbar\">\r\n      <input\r\n        type=\"text\"\r\n        ref={searchRef}\r\n        onChange={handleSearchChange}\r\n        className=\"search-text-input\"\r\n        placeholder=\"Search by currency....\"\r\n      />\r\n      <i className=\"fas fa-search\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\n\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport {\n  simpleAction,\n  fetchCurrRates,\n  fetchCurrRatesOld\n} from \"./actions/simpleAction\";\nimport SideDrawer from \"./components/SideDrawer/SideDrawer\";\nimport Backdrop from \"./components/Backdrop/Backdrop\";\nimport CurrTable from \"./components/CurrTable/CurrTable\";\nimport CurrDropdown from \"./components/CurrDropdown\";\nimport {\n  setCurrency,\n  setTotalCount,\n  setAllData\n} from \"./actions/paginationAction\";\nimport SearchBar from \"./components/SearchBar\";\nimport { getDate } from \"./utility\";\n\nclass App extends React.Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n    this.setState(prevState => {\n      return { sideDrawerOpen: !prevState.sideDrawerOpen };\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false });\n  };\n\n  simpleAction = event => {\n    this.props.simpleAction();\n  };\n\n  componentWillMount() {\n    this.props.setCurrency(\"JPY\");\n\n    var id = setInterval(() => {\n      if (this.props.currData.result && this.props.currData.result !== \"\") {\n        this.props.fetchCurrRatesOld(\n          \"JPY\",\n          getDate(this.props.currData.result.date)\n        );\n        clearInterval(id);\n      }\n    }, 200);\n  }\n\n  render() {\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler} />;\n    }\n    return (\n      <div className=\"App\">\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler} />\n        <SideDrawer show={this.state.sideDrawerOpen} />\n        {backdrop}\n        <div className=\"AppBody\">\n          <div className=\"tableOperations\">\n            <CurrDropdown\n              selectedCurrency={this.props.paginationData.selectedCurrency}\n              setCurrency={this.props.setCurrency}\n              result={this.props.currData.result}\n              fetchCurrRates={this.props.fetchCurrRates}\n              fetchCurrRatesOld={this.props.fetchCurrRatesOld}\n              date={\n                this.props.currData.result\n                  ? this.props.currData.result.date\n                  : \"\"\n              }\n            />\n            <SearchBar\n              selectedCurrency={this.props.paginationData.selectedCurrency}\n              setTotalCount={this.props.setTotalCount}\n              result={this.props.currData.result}\n              setAllData={this.props.setAllData}\n              allData={this.props.paginationData.allData}\n              copyAllData={this.props.paginationData.copyAllData}\n            />\n          </div>\n          <CurrTable\n            currRate={this.props.fetchCurrRates}\n            oldRate={this.props.fetchCurrRatesOld}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  simpleAction: () => dispatch(simpleAction()),\n  setCurrency: value => {\n    dispatch(fetchCurrRates(value));\n    dispatch(setCurrency(value));\n  },\n  setTotalCount: value => {\n    dispatch(setTotalCount(value));\n  },\n  setAllData: value => {\n    dispatch(setAllData(value));\n  },\n  fetchCurrRatesOld: (value1, value2) => {\n    dispatch(fetchCurrRatesOld(value1, value2));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport currData from './simpleReducer';\r\nimport paginationData from './paginationReducer';\r\nexport default combineReducers({\r\n    currData, paginationData\r\n});","export default (state = { result: null, resultOldData: null }, action) => {\r\n  switch (action.type) {\r\n    case \"SIMPLE_ACTION\":\r\n      return {\r\n        result: action.payload\r\n      };\r\n    case \"FETCH_DONE\": {\r\n      return { ...state, result: action.payload };\r\n    }\r\n    case \"FETCH_FAIL\":\r\n      return {\r\n        result: action.payload\r\n      };\r\n    case \"FETCH_DONE_OLD_RATES\":\r\n      return { ...state, resultOldData: action.payload };\r\n    case \"FETCH_FAIL_OLD_RATES\":\r\n      return {\r\n        resultOldData: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (\r\n  state = {\r\n    currPageNum: 1,\r\n    currPageData: [],\r\n    allData: [],\r\n    selectedCurrency: \"JPY\",\r\n    countPerPage: 8\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_PAGE_NO\":\r\n      return { ...state, currPageNum: action.payload };\r\n    case \"SET_CURRENT_DATA\": {\r\n      return { ...state, currPageData: action.payload };\r\n    }\r\n    case \"SET_ALL_DATA\": {\r\n      return { ...state, allData: action.payload };\r\n    }\r\n    case \"SET_TOTAL_COUNT\": {\r\n      return { ...state, totalCount: action.payload };\r\n    }\r\n    case \"SET_COUNT_PER_PAGE\": {\r\n      return { ...state, countPerPage: action.payload };\r\n    }\r\n    case \"SET_CURRENCY\": {\r\n      return { ...state, selectedCurrency: action.payload };\r\n    }\r\n    case \"SET_COPY_ALL_DATA\": {\r\n      return { ...state, copyAllData: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nReactDOM.render(\n<Provider store={configureStore()}>\n    <App />\n</Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\nexport default function configureStore() {\r\n return createStore(\r\n  rootReducer,\r\n   applyMiddleware(thunk)\r\n );\r\n}"],"sourceRoot":""}